# -*- coding: utf-8 -*-
"""Reebot.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1U0fbcHhtBarlMIe_FCmng3uRHfl6N9KQ

#**BUILDING REE-BOT: A PYTHON CHATBOT**


I am using the ChatterBot library in python to build a Rule-based chatbot. This means the bot will use a set of predetermined rules to respond to user queries. 

Since this type of a bot follows developer mentioned rules, it is not very effective in handling more complicated queries or requests.
"""

# installing all the needed dependencies to create a ChatBot in Python
# ChatterBot library is used to deliver automated responses to a user's inputs. 
!pip install chatterbot
!pip install chatterbot_corpus

# Importing needed classes
from chatterbot import ChatBot
from chatterbot.trainers import ListTrainer

"""The ChatBot we create will be an instance of the class ChatBot from ChatterBot.

Once we have an instance of ChatterBot, we wil move to training the bot. This will help the bot have a certain level of knowledge to ensure there is some response to specific inputs.

"""

reebot = ChatBot(name = 'ReeBot"', logic_adapters = 
                 ['chatterbot.logic.MathematicalEvaluation',
                  'chatterbot.logic.BestMatch'])

"""In the above instance, the name refers to the name of our ChatBot. Seting the read_only attribute to True means that I have disabled the bot's ability to learn after it's training. 

The logic_adapters field includes a list of all field being used to train the bot. The 'chatterbot.logic.MathematicalEvaluation' logical adaper helps the bot solve mathematical problems while 'chatterbot.logic.BestMatch' guides the bot to choose the best match from the list of responses that have been provided to it in the next section.

One can provide a list of response strings as well using the ListTrainer instance. 

I have used an existing corpus of data to train my Python ChatBot.
"""

# response to name
name_ans = ['i\'m Reebot :)',
            'i am a ChatBot made in Python']

ListTrainer(reebot).train(name_ans)

from chatterbot.trainers import ChatterBotCorpusTrainer
ChatterBotCorpusTrainer(reebot).train('chatterbot.corpus.english')

"""Now the bot is ready to chat!

Use the get_response() function to talk to the bot. Here are some examples.
"""

print(reebot.get_response("hello"))

print(reebot.get_response("how are you doing?"))

print(reebot.get_response("what's your name?"))

print(reebot.get_response("who are you?"))

print(reebot.get_response("how far is the moon?"))

print(reebot.get_response("how far is the sun from earth?"))

"""Not all of the answers wil make sense because some of the Tainer classes might be corrupted as you can see in the examples. 

I am using the existing [Trainer classes available on GitHub](https://github.com/gunthercox/ChatterBot/blob/master/chatterbot/trainers.py)
.
"""